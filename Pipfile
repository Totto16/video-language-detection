[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[packages]
torchaudio = "*"
torchvision = "*"
torch = "*"
speechbrain = "*"
python-ffmpeg = "*"
pyyaml = "*"
pynvml = "*"
humanize = "*"
enlighten = "*"
psutil = "*"
apischema = "*"
pysoundfile = "*"
wxpython = {version = "*", find-links="https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/"}
themoviedb = "*"
sentencepiece = {git = "https://github.com/google/sentencepiece", subdirectory = "python"}
prompt-toolkit = "*"
questionary = "*"
colorlog = "*"

[dev-packages]
pylint = "*"
mypy = "*"
flake8 = "*"
black = "*"
ruff = "*"
types-psutil = "*"
pytest = "*"
pytest-cov = "*"
pytest-assertcount = "*"
pytest-subtests = "*"
types-requests = "*"
requests = "*"
chardet = "*"
types-wxpython = "*"
types-pyyaml = "*"

[scripts]
check = "python src/entry.py run"
lint = "bash -c 'pipenv run mypy && pipenv run ruff'"
mypy = "bash -c 'pipenv run mypy-source && pipenv run mypy-helpers'"
mypy-source = "mypy src/ tests/"
mypy-helpers = "bash -c 'cd ffmpeg_helper/ && mypy . --explicit-package-bases'"
ruff = "ruff check src/ tests/ ffmpeg_helper/"
ruff-fix = "pipenv run ruff --fix"
schema = "python src/entry.py schema"
gui = "python src/entry.py gui"
test = "pytest tests/"
coverage = "bash -c 'coverage run -m pytest tests/ && coverage xml'"
extract_translation = "pygettext3 -d video_language_detect -o locales/video_language_detect.pot src/"
generate_translation = "bash -c 'for PO_FILE in locales/*/LC_MESSAGES/*.po; do MO_FILE=\"${PO_FILE/.po/.mo}\"; msgfmt -o \"$MO_FILE\" \"$PO_FILE\"; done'"

[requires]
python_version = "3.13"
